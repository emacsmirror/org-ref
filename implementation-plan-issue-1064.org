#+TITLE: Implementation Plan for Issue #1064 - Display Equation Images in Tooltips
#+AUTHOR: Implementation Plan
#+DATE: 2025-10-13

* Overview

Enhance org-ref to display rendered equation images in tooltips when hovering over equation references (eqref:), instead of just showing raw LaTeX code.

* Background

** Current Behavior
- ~org-ref-ref-help-echo~ (org-ref-ref-links.el:228) returns plain text context for labels
- For equations, this shows raw LaTeX environment code
- Works via the ~:help-echo~ property on ref links

** User Request
- User has org-mode preview images already generated in buffer (or math-preview overlays)
- Wants to see the rendered equation image on hover in tooltip
- Prefer native Emacs/org-mode capabilities

** Key Insight from 2016 Blog Post
Images CAN be displayed in tooltips using:
#+begin_src elisp
;; The help-echo property can return a propertized string with an image
(propertize " " 'display (create-image "file.png"))
#+end_src

When this is returned from a ~help-echo~ function, Emacs displays the image in the tooltip!

* Technical Approach: Image Tooltips First

** Core Strategy

1. Detect existing org-mode preview overlays at the label location
2. Extract the image from the overlay's ~display~ property
3. Return a propertized string with the image in ~help-echo~
4. Emacs displays the image directly in the tooltip (GUI mode)

** How Org Preview Overlays Work

Org-mode's ~org-latex-preview~ creates overlays with:
- Property: ~org-overlay-type~ = ~'org-latex-overlay~
- Property: ~display~ = ~(image :type png :file "/path/to/file.png" ...)~

We extract this image spec and use it in the tooltip.

* Implementation Plan

** Phase 1: Image Tooltip Display (PRIMARY FOCUS)

*** 1.1 Add Configuration
#+begin_src elisp
(defcustom org-ref-show-equation-images-in-tooltips nil
  "If non-nil, show rendered equation images in tooltips for eqref links.
Requires that equations have been previewed with `org-latex-preview' or
compatible preview package (like math-preview).

When enabled, hovering over an equation reference will display the
rendered equation image in a tooltip instead of raw LaTeX code.

This feature works best in GUI Emacs. In terminal Emacs, falls back to
text display."
  :type 'boolean
  :group 'org-ref)
#+end_src

*** 1.2 Implement Image Finder
#+begin_src elisp
(defun org-ref-get-preview-image-at-label (label)
  "Return the preview image display spec for LABEL if it exists.
Searches for LABEL in the buffer and checks if there is an org-latex
preview overlay at that location. Returns the image display spec
that can be used in a propertized string, or nil if no preview exists."
  (save-excursion
    (save-restriction
      (widen)
      (goto-char (point-min))
      ;; Search for \label{LABEL} in LaTeX environments
      (when (re-search-forward (format "\\\\label{%s}" (regexp-quote label)) nil t)
        ;; Get the containing element (should be latex-environment)
        (let* ((elem (org-element-context))
               (begin (org-element-property :begin elem))
               (end (org-element-property :end elem)))
          (when (and begin end (eq (org-element-type elem) 'latex-environment))
            ;; Search for org-latex-overlay in this range
            (catch 'found
              (let ((pos begin))
                (while (< pos end)
                  (dolist (ov (overlays-at pos))
                    ;; Check for org-mode preview overlay
                    (when (or (eq (overlay-get ov 'org-overlay-type) 'org-latex-overlay)
                             ;; Also support math-preview overlays
                             (overlay-get ov 'preview-image))
                      (let ((display (overlay-get ov 'display)))
                        (when (and display (listp display) (eq (car display) 'image))
                          (throw 'found display)))))
                  (setq pos (next-overlay-change pos))))
              nil)))))))
#+end_src

*** 1.3 Enhanced help-echo Function
#+begin_src elisp
(defun org-ref-ref-help-echo-with-image (_win _obj position)
  "Enhanced tooltip for ref labels with image support.
POSITION is the point under the mouse.

If `org-ref-show-equation-images-in-tooltips' is non-nil and a preview
image exists for the referenced equation, returns a propertized string
containing the image. Otherwise returns the text context."
  (let* ((label (get-text-property position 'org-ref-ref-label))
         (context (cdr (assoc label (org-ref-get-labels)))))
    (if (and org-ref-show-equation-images-in-tooltips
             label
             (display-graphic-p))  ; Images only work in GUI
        ;; Try to find preview image
        (let ((image-spec (org-ref-get-preview-image-at-label label)))
          (if image-spec
              ;; Return propertized string with image for tooltip
              (propertize " " 'display image-spec)
            ;; No image found, return text context
            context))
      ;; Feature disabled or terminal mode, return text
      context)))
#+end_src

*** 1.4 Update Link Parameters
Modify the ~:help-echo~ property for eqref (and optionally other ref types):
#+begin_src elisp
;; In the eqref link definition (around line 404)
(org-link-set-parameters "eqref"
                         :store (defun org-ref-store-eqref ()
                                  (org-ref-store-ref-link "eqref"))
                         :complete (apply-partially #'org-ref-complete-link "eqref")
                         :activate-func #'org-ref-ref-activate
                         :follow #'org-ref-ref-jump-to
                         :export (apply-partially #'org-ref-ref-export "eqref")
                         :face 'org-ref-ref-face
                         :help-echo #'org-ref-ref-help-echo-with-image)  ; CHANGED
#+end_src

*** 1.5 Testing Strategy
1. Create test org file with equations
2. Generate previews with ~C-c C-x C-l~ (org-latex-preview)
3. Hover over eqref links
4. Verify image appears in tooltip
5. Test with missing previews (should show text)
6. Test in terminal (should show text)

** Phase 2: Handle Edge Cases

*** 2.1 Support #+name: Labels
Some equations use ~#+name: label~ instead of ~\label{}~:
#+begin_src elisp
(defun org-ref-get-preview-image-for-named-element (label)
  "Find preview image for element with #+name: LABEL."
  (save-excursion
    (save-restriction
      (widen)
      (goto-char (point-min))
      (when (re-search-forward (format "^[ \t]*#\\+name:[ \t]*%s"
                                      (regexp-quote label)) nil t)
        ;; Found named element, check for overlays
        (let* ((elem (org-element-context))
               (begin (org-element-property :begin elem))
               (end (org-element-property :end elem)))
          (when (and begin end)
            ;; Search for overlay...
            ))))))
#+end_src

*** 2.2 Handle Multiple Labels
When ref has multiple labels like ~ref:eq1,eq2~, show first available image:
#+begin_src elisp
(defun org-ref-get-first-available-image (labels)
  "Return image for first label in LABELS that has a preview."
  (catch 'found
    (dolist (label (split-string labels ","))
      (let ((img (org-ref-get-preview-image-at-label (string-trim label))))
        (when img
          (throw 'found img))))
    nil))
#+end_src

*** 2.3 Caching for Performance
Cache overlay positions to avoid repeated searches:
#+begin_src elisp
(defvar-local org-ref-preview-image-cache nil
  "Cache of (label . image-spec) for preview images.")

(defvar-local org-ref-preview-cache-tick nil
  "Buffer modification tick when cache was last updated.")

(defun org-ref-clear-preview-cache ()
  "Clear the preview image cache."
  (setq org-ref-preview-image-cache nil
        org-ref-preview-cache-tick nil))
#+end_src

** Phase 3: Extend to Other Ref Types

Apply same enhancement to:
- ~ref~
- ~autoref~
- ~cref~ / ~Cref~
- etc.

Add configuration to control which types get image tooltips:
#+begin_src elisp
(defcustom org-ref-image-tooltip-ref-types '("eqref")
  "List of ref link types that should show image tooltips.
Only relevant when `org-ref-show-equation-images-in-tooltips' is non-nil."
  :type '(repeat string)
  :group 'org-ref)
#+end_src

** Phase 4: Fallback Display Methods

*** 4.1 Minibuffer Fallback (Terminal Mode)
When not in GUI, show image in minibuffer:
#+begin_src elisp
(defun org-ref-show-image-in-minibuffer (image-spec)
  "Display IMAGE-SPEC in minibuffer as fallback."
  (message "%s" (propertize " " 'display image-spec)))
#+end_src

*** 4.2 Optional Posframe Enhancement
If user has posframe installed, offer it as alternative:
#+begin_src elisp
(defcustom org-ref-equation-tooltip-method 'tooltip
  "Method to display equation images on hover.
- tooltip: Use native Emacs tooltips (GUI only)
- minibuffer: Show in minibuffer (works in terminal)
- posframe: Use posframe if available (requires posframe package)"
  :type '(choice (const :tag "Tooltip" tooltip)
                (const :tag "Minibuffer" minibuffer)
                (const :tag "Posframe" posframe))
  :group 'org-ref)
#+end_src

* Implementation Steps

** Step 1: Core Implementation ⭐ START HERE
1. [ ] Add ~org-ref-show-equation-images-in-tooltips~ defcustom
2. [ ] Implement ~org-ref-get-preview-image-at-label~
3. [ ] Implement ~org-ref-ref-help-echo-with-image~
4. [ ] Update eqref link parameters to use new help-echo
5. [ ] Test basic functionality

** Step 2: Refinements
1. [ ] Add support for #+name: labels
2. [ ] Handle multiple labels in one ref
3. [ ] Add caching for performance
4. [ ] Add error handling

** Step 3: Extensions
1. [ ] Apply to other ref types (configurable)
2. [ ] Add minibuffer fallback for terminal
3. [ ] Test with math-preview package overlays
4. [ ] Add posframe option (if requested)

** Step 4: Polish
1. [ ] Write tests
2. [ ] Update documentation
3. [ ] Add customization examples
4. [ ] Create demo/screenshot

* Files to Modify

- ~org-ref-ref-links.el~: Main implementation
  - Add new defcustoms (after line 40)
  - Add new functions (before line 228)
  - Modify ~org-ref-ref-help-echo~ or create new function
  - Update link parameters (line 404+)

* Testing Checklist

** Basic Tests
- [ ] GUI Emacs: Image appears in tooltip
- [ ] Terminal Emacs: Text appears in tooltip
- [ ] Missing preview: Text appears in tooltip
- [ ] Feature disabled: Text appears in tooltip

** Edge Cases
- [ ] Multiple labels in one ref
- [ ] Label not found in buffer
- [ ] Equation without preview
- [ ] #+name: style labels
- [ ] Nested equations

** Performance
- [ ] Large buffer with many equations
- [ ] Repeated hovering (caching works)
- [ ] Buffer modification invalidates cache

* Success Criteria

1. ✅ Image displays in tooltip when hovering over eqref with preview
2. ✅ Graceful fallback to text when preview doesn't exist
3. ✅ Works in GUI Emacs reliably
4. ✅ No performance degradation
5. ✅ Easy to enable/disable via defcustom
6. ✅ Compatible with org-latex-preview and math-preview

* Benefits of This Approach

1. *Native tooltips*: Uses Emacs built-in tooltip system with images
2. *Reuses existing previews*: No duplicate rendering
3. *Simple implementation*: Leverages existing overlay infrastructure
4. *Optional*: Disabled by default, easy to enable
5. *Extensible*: Can be applied to all ref types
6. *Compatible*: Works with multiple preview systems

* Timeline Estimate

- Step 1 (Core): 2-3 hours
- Step 2 (Refinements): 2-3 hours
- Step 3 (Extensions): 2-3 hours
- Step 4 (Polish): 1-2 hours

*Total*: 7-11 hours for complete implementation

* References

- Your 2016 blog: https://kitchingroup.cheme.cmu.edu/blog/2016/03/16/Getting-graphical-feedback-as-tooltips-in-Emacs/
- Issue #1064: Enhancement request
- org-ref-ref-links.el: Current implementation
